"use strict";(self.webpackChunkmapml_viewer_doc=self.webpackChunkmapml_viewer_doc||[]).push([[3945],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>y});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=p(n),d=a,y=c["".concat(s,".").concat(d)]||c[d]||u[d]||o;return n?r.createElement(y,i(i({ref:t},m),{},{components:n})):r.createElement(y,i({ref:t},m))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9107:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={id:"creating-styles",title:"Cr\xe9ation de styles mvt personnalis\xe9s",slug:"/tutorials/creating-styles"},i=void 0,l={unversionedId:"tutorials/creating-styles",id:"tutorials/creating-styles",title:"Cr\xe9ation de styles mvt personnalis\xe9s",description:"Mapbox vector tiles (mvt) files are an encoding of map data optimized for rendering to HTML canvas element(s) via JavaScript",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/tutorials/creating-styles.md",sourceDirName:"tutorials",slug:"/tutorials/creating-styles",permalink:"/web-map-doc/fr/docs/tutorials/creating-styles",draft:!1,tags:[],version:"current",frontMatter:{id:"creating-styles",title:"Cr\xe9ation de styles mvt personnalis\xe9s",slug:"/tutorials/creating-styles"},sidebar:"sidebar",previous:{title:"Modifier la carte",permalink:"/web-map-doc/fr/docs/tutorials/modifying-map"},next:{title:"Utilisation des styles mvt",permalink:"/web-map-doc/fr/docs/tutorials/using-styles"}},s={},p=[],m={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/mapbox/vector-tile-spec"},"Mapbox vector tiles (mvt)")," files are an encoding of map data optimized for rendering to HTML canvas element(s) via JavaScript\nand/or JSON-based encoded style information.  Cascading Style Sheet rules do not apply, because mvt content is not exposed via browser APIs, so\nstyle rules, while ",(0,a.kt)("a",{parentName:"p",href:"https://glazkov.com/2024/01/16/declarative-vs-imperative/"},"sort-of declarative"),", are implemented in script."),(0,a.kt)("p",null,"The pmtiles map archive and mvt formats in the MapML polyfill are integrated via\n",(0,a.kt)("a",{parentName:"p",href:"https://docs.protomaps.com/pmtiles/leaflet"},"the protomaps-leaflet library"),"."),(0,a.kt)("p",null,"Before proceeding below, you should read the ",(0,a.kt)("a",{parentName:"p",href:"https://docs.protomaps.com/pmtiles/leaflet#custom-vector-data"},"Custom Vector Data")," section.\nAnother useful source of information for styling includes ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/protomaps/protomaps-leaflet/tree/main/examples"},"the source code examples"),"."),(0,a.kt)("p",null,"Working examples of themes and styles are ",(0,a.kt)("a",{parentName:"p",href:"https://maps4html.org/experiments/vector-tiles/pmtiles/"},"available on-line"),", with available ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Maps4HTML/experiments/tree/main/vector-tiles/pmtiles"},"source code"),"."),(0,a.kt)("p",null,"A pmtiles stylesheet used in the MapML polyfill is a JavaScript module source file which exports a\nsingle symbol, which ",(0,a.kt)("strong",{parentName:"p"},"must be")," named ",(0,a.kt)("inlineCode",{parentName:"p"},"pmtilesRules"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const pmtilesRules = new Map();\n...\npmtilesRules.set(\n  'https://maps4html.org/experiments/vector-tiles/pmtiles/spearfish.pmtiles?theme=light',\n  { theme: { theme: 'light' } }\n);\n...\nexport { pmtilesRules };\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"pmtilesRules")," export must be a ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map"},"JavaScript Map-type object"),", structured as follows:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"must have a unique URL template string key that will be used on the web to identify a set of rules"),(0,a.kt)("li",{parentName:"ul"},"has an object value that has a ",(0,a.kt)("inlineCode",{parentName:"li"},"theme")," or a ",(0,a.kt)("inlineCode",{parentName:"li"},"rules")," property"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"theme")," property must be an object literal, itself with a ",(0,a.kt)("inlineCode",{parentName:"li"},"theme")," property with a string theme name value"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"rules")," property must be an object literal, with ",(0,a.kt)("inlineCode",{parentName:"li"},"PAINT_RULES: [...]")," and/or a ",(0,a.kt)("inlineCode",{parentName:"li"},"LABEL_RULES: [...]")," array-valued properties"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"PAINT_RULES")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"LABEL_RULES")," are arrays of objects that have required ",(0,a.kt)("inlineCode",{parentName:"li"},"dataLayer")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"symbolizer")," properties"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"PAINT_RULES")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"LABEL_RULES")," can have optional properties e.g. ",(0,a.kt)("inlineCode",{parentName:"li"},"filter"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"minzoom"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"maxzoom")," "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"dataLayer")," is a string property that is the name of a layer encoded in the mvt"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"symbolizer")," is property of ",(0,a.kt)("inlineCode",{parentName:"li"},"Symbolizer"),"-type value")),(0,a.kt)("p",null,"An example custom pmtiles stylesheet module for a localhost GeoServer 'spearfish' Layer Group (set up with a mvt tile cache) is as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"class SpearfishSymbolizer {\n  constructor(options) {\n    this.color = options.color;\n    this.shape = options.shape;\n  }\n  draw(context, geom, z, feature) {\n    let pt = geom[0][0];\n    context.fillStyle = this.color;\n    context.strokeStyle = this.color;\n    context.beginPath();\n    if (this.shape === 'circle') {\n      context.arc(pt.x, pt.y, 3, 0, 2 * Math.PI);\n    } else {\n      context.rect(pt.x - 2, pt.y - 2, 4, 4);\n    }\n    context.stroke();\n    context.fill();\n  }\n}\nconst pmtilesRules = new Map();\npmtilesRules.set(\n  'http://localhost:8080/geoserver/gwc/service/wmts/rest/spearfish/OSMTILE/{z}/{y}/{x}?format=application/vnd.mapbox-vector-tile',\n  {\n    rules: {\n      PAINT_RULES: [\n        {\n          dataLayer: 'streams',\n          symbolizer: new M.protomapsL.LineSymbolizer({ color: 'steelblue', width: 2 })\n        },\n        {\n          dataLayer: 'roads',\n          symbolizer: new M.protomapsL.LineSymbolizer({ color: 'maroon', width: 2 })\n        },\n        {\n          dataLayer: 'restricted',\n          symbolizer: new M.protomapsL.PolygonSymbolizer({\n            fill: 'red',\n            opacity: 0.5\n          })\n        },\n        {\n          dataLayer: 'restricted',\n          symbolizer: new M.protomapsL.LineSymbolizer({ color: 'red', width: 2 })\n        },\n        {\n          dataLayer: 'archsites',\n          symbolizer: new SpearfishSymbolizer({\n            color: 'red',\n            shape: 'square'\n          })\n        },\n        {\n          dataLayer: 'bugsites',\n          symbolizer: new SpearfishSymbolizer({\n            color: 'black',\n            shape: 'circle'\n          })\n        }\n      ],\n      LABEL_RULES: [\n        {\n          dataLayer: 'archsites',\n          symbolizer: new M.protomapsL.CenteredTextSymbolizer({\n            labelProps: ['str1'],\n            fill:'white',\n            width:2,\n            stroke:'black',\n            font:\"600 16px sans-serif\"\n          }),\n          // note that filter is a property of a rule, not an option to a symbolizer\n          filter: (z,f) => { return f.props['str1'].trim().toLowerCase() !== 'no name'; }\n        }\n      ]\n    }\n  }\n);\nexport { pmtilesRules };\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"/* \n * The following imports from protomaps-leaflet are available on the \n * M.protomapsL global variable e.g. M.protomapsL.CenteredSymbolizer :\n\n  CenteredSymbolizer,\n  CenteredTextSymbolizer,\n  CircleSymbolizer,\n  FlexSymbolizer,\n  Font,\n  GeomType,\n  GroupSymbolizer,\n  IconSymbolizer,\n  Index,\n  Justify,\n  Labeler,\n  Labelers,\n  LineLabelPlacement,\n  LineLabelSymbolizer,\n  LineSymbolizer,\n  OffsetSymbolizer,\n  OffsetTextSymbolizer,\n  Padding,\n  PmtilesSource,\n  PolygonSymbolizer,\n  Sheet,\n  ShieldSymbolizer,\n  Static,\n  TextPlacements,\n  TextSymbolizer,\n  TileCache,\n  View,\n  ZxySource,\n  arr,\n  covering,\n  createPattern,\n  exp,\n  getZoom,\n  isCcw,\n  isInRing,\n  labelRules,\n  leafletLayer,\n  linear,\n  paint,\n  paintRules,\n  pointInPolygon,\n  pointMinDistToLines,\n  pointMinDistToPoints,\n  sourcesToViews,\n  step,\n  toIndex,\n  transformGeom,\n  wrap\n*/\n")))}u.isMDXComponent=!0}}]);